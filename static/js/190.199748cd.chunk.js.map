{"version":3,"file":"static/js/190.199748cd.chunk.js","mappings":"0NAAMA,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAUN,EANkB,kBAChBC,MACE,iEACAL,EAHc,E,kBCyClB,EA7Ca,WACX,IAAMM,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WAENH,GAAa,GAEbI,IACGC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GACJV,EAAUU,EAAKC,QAChB,IACAC,OAAM,SAAAT,GACLC,EAASD,EAAMU,QAChB,IACAC,SAAQ,WACPZ,GAAa,EACd,GAIN,GAAE,KAGD,2BACGC,GAASC,EAASD,EAAMU,SACxBZ,IAAa,SAAC,KAAD,KACd,wBACGF,EAAOgB,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMxB,GAAhD,SACGoB,EAAMK,SAFFL,EAAME,GAMlB,QAIR,C","sources":["services/Api/Tranding.js","pages/Home/Home.jsx"],"sourcesContent":["const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzN2ZjNmQ2ZDk3Y2RjYjQ2MWY4ODRlODNiYjk4YTc5OSIsInN1YiI6IjY0YTcwNjczOTY1MjIwMDBhZTg0MjcwNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ._FssleSwH7ZT_5bsWB87BjRy28BwzRkGD1qx-exsCrk',\n  },\n};\n\nconst getImages = () =>\n  fetch(\n    'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n    options\n  );\n\nexport default getImages;\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport getImages from 'services/Api/Tranding';\nimport { ColorRing } from 'react-loader-spinner';\n\nconst Home = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchImages = () => {\n      setIsLoading(true);\n\n      getImages()\n        .then(response => response.json())\n        .then(data => {\n          setMovies(data.results);\n        })\n        .catch(error => {\n          setError(error.message);\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    };\n\n    fetchImages();\n  }, []);\n\n  return (\n    <div>\n      {error && setError(error.message)}\n      {isLoading && <ColorRing />}\n      <ul>\n        {movies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\nexport default Home;\n"],"names":["options","method","headers","accept","Authorization","fetch","location","useLocation","useState","movies","setMovies","isLoading","setIsLoading","error","setError","useEffect","getImages","then","response","json","data","results","catch","message","finally","map","movie","to","id","state","from","title"],"sourceRoot":""}