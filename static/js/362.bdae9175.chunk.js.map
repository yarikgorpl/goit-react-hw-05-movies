{"version":3,"file":"static/js/362.bdae9175.chunk.js","mappings":"0NACA,EAAwB,sBAAxB,EAAwF,4BCDlFA,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NASN,EALkB,SAAAC,GAAO,OACvBC,MAAM,mDAAD,OACgDD,EADhD,8CAEHL,EAHqB,E,kBCqEzB,EAxEe,WAAO,IAAD,EACnB,GAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAoB,SAAAC,GACxB,IAAMC,EAAeD,EAAIE,OAAOC,MAChC,GAAqB,KAAjBF,EACF,OAAOH,EAAgB,CAAC,GAE1BA,EAAgB,CAAEX,QAASc,GAC5B,EAEKd,EAAO,UAAGU,EAAaO,IAAI,kBAApB,QAAkC,GAEzCC,GAAWC,EAAAA,EAAAA,MAqBjB,OAnBAC,EAAAA,EAAAA,YAAU,WAENZ,GAAa,GAEba,EAAUrB,GACPsB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GACJrB,EAAUqB,EAAKC,QAChB,IACAC,OAAM,SAAAtB,GACLC,EAASD,EAAMuB,QAChB,IACAC,SAAQ,WACPrB,GAAa,EACd,GAIN,GAAE,CAACR,KAEF,2BACGK,GAASC,EAASD,EAAMuB,UAEzB,kBACEE,KAAK,OACLd,MAAOhB,EACP+B,UAAWC,EACXC,SAAUrB,KAEZ,mBACEkB,KAAK,SACLC,UAAWC,EACXE,QAAStB,EAHX,SAIC,YAGD,+BACGP,GAASC,EAASD,EAAMuB,SACxBrB,IAAa,SAAC,KAAD,KACd,wBACGJ,EAAOgC,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMtB,GAAxC,SACGkB,EAAMK,SAFFL,EAAME,GAMlB,WAKV,C","sources":["webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","services/Api/Search.js","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Movies_input__KrUqs\",\"form\":\"Movies_form__4ow+Z\",\"form_button\":\"Movies_form_button__9uqYm\",\"form_button_label\":\"Movies_form_button_label__3DS9I\"};","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzN2ZjNmQ2ZDk3Y2RjYjQ2MWY4ODRlODNiYjk4YTc5OSIsInN1YiI6IjY0YTcwNjczOTY1MjIwMDBhZTg0MjcwNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ._FssleSwH7ZT_5bsWB87BjRy28BwzRkGD1qx-exsCrk',\n  },\n};\n\nconst getImages = movieId =>\n  fetch(\n    `https://api.themoviedb.org/3/search/movie?query=${movieId}&include_adult=false&language=en-US&page=1`,\n    options\n  );\nexport default getImages;\n","import { useSearchParams, useLocation, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport css from './Movies.module.css';\nimport getImages from 'services/Api/Search';\nimport { ColorRing } from 'react-loader-spinner';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const updateQueryString = evt => {\n    const movieIdValue = evt.target.value;\n    if (movieIdValue === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ movieId: movieIdValue });\n  };\n\n  const movieId = searchParams.get('movieId') ?? '';\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchImages = () => {\n      setIsLoading(true);\n\n      getImages(movieId)\n        .then(response => response.json())\n        .then(data => {\n          setMovies(data.results);\n        })\n        .catch(error => {\n          setError(error.message);\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    };\n\n    fetchImages();\n  }, [movieId]);\n  return (\n    <div>\n      {error && setError(error.message)}\n\n      <input\n        type=\"text\"\n        value={movieId}\n        className={css.input}\n        onChange={updateQueryString}\n      />\n      <button\n        type=\"submit\"\n        className={css.form_button}\n        onClick={updateQueryString}\n      >\n        Search\n      </button>\n      <section>\n        {error && setError(error.message)}\n        {isLoading && <ColorRing />}\n        <ul>\n          {movies.map(movie => {\n            return (\n              <li key={movie.id}>\n                <Link to={`${movie.id}`} state={{ from: location }}>\n                  {movie.title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </section>\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["options","method","headers","accept","Authorization","movieId","fetch","useState","movies","setMovies","error","setError","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","updateQueryString","evt","movieIdValue","target","value","get","location","useLocation","useEffect","getImages","then","response","json","data","results","catch","message","finally","type","className","css","onChange","onClick","map","movie","to","id","state","from","title"],"sourceRoot":""}