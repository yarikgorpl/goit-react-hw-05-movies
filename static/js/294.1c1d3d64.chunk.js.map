{"version":3,"file":"static/js/294.1c1d3d64.chunk.js","mappings":"0NAAMA,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAUN,EANkB,SAAAC,GAAO,OACvBC,MAAM,sCAAD,OACmCD,EADnC,mBAEHL,EAHqB,E,kBCyDzB,EA9DqB,WAAO,IAAD,IACzB,GAA0BO,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQR,GAAYS,EAAAA,EAAAA,MAAZT,QAEFU,GAAWC,EAAAA,EAAAA,MAEXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAkB3D,OAjBAC,EAAAA,EAAAA,YAAU,WAENV,GAAa,GAEbW,EAAUjB,GACPkB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAC,GAAQ,OAAIf,EAASe,EAAb,IACbE,OAAM,SAAAd,GACLC,EAASD,EAAMe,QAChB,IACAC,SAAQ,WACPjB,GAAa,EACd,GAGN,GAAE,CAACN,KAGF,+BACGO,GAASC,EAASD,EAAMe,SACxBjB,IAAa,SAAC,KAAD,KACd,SAAC,KAAD,CAAMmB,GAAIZ,EAAoBa,QAA9B,SAAuC,aACvC,4BACE,gBACEC,IAAG,yCAAoCvB,EAAMwB,aAC7CC,IAAI,MAEN,4BACE,wBAAKzB,EAAM0B,SACX,yBAAG,cAAYC,KAAKC,MAA2B,GAArB5B,EAAM6B,cAAmB,QACnD,wBAAI,cACJ,uBAAI7B,EAAM8B,YACV,wBAAI,YACJ,uBAAI9B,EAAM+B,QAAU/B,EAAM+B,OAAOC,KAAI,SAAAC,GAAE,OAAIA,EAAGC,KAAO,GAAd,aAG3C,uBAAG,4BACH,2BACE,yBACE,SAAC,KAAD,CAAMb,GAAG,OAAT,SAAgB,YAElB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,kBAGvB,SAAC,EAAAc,SAAD,CAAUC,UAAU,yBAAK,eAAzB,UACE,SAAC,KAAD,QAIP,C","sources":["services/Api/FullInfo.js","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzN2ZjNmQ2ZDk3Y2RjYjQ2MWY4ODRlODNiYjk4YTc5OSIsInN1YiI6IjY0YTcwNjczOTY1MjIwMDBhZTg0MjcwNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ._FssleSwH7ZT_5bsWB87BjRy28BwzRkGD1qx-exsCrk',\n  },\n};\n\nconst getImages = movieId =>\n  fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n    options\n  );\n\nexport default getImages;\n","import { Link, useParams, useLocation, Outlet } from 'react-router-dom';\nimport { useEffect, useState, useRef, Suspense } from 'react';\nimport getImages from 'services/Api/FullInfo';\nimport { ColorRing } from 'react-loader-spinner';\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  const location = useLocation();\n\n  const backLincLocationRef = useRef(location.state?.from ?? '/movies');\n  useEffect(() => {\n    const fetchImages = () => {\n      setIsLoading(true);\n\n      getImages(movieId)\n        .then(response => response.json())\n        .then(response => setMovie(response))\n        .catch(error => {\n          setError(error.message);\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    };\n    fetchImages();\n  }, [movieId]);\n\n  return (\n    <section>\n      {error && setError(error.message)}\n      {isLoading && <ColorRing />}\n      <Link to={backLincLocationRef.current}>Go back</Link>\n      <div>\n        <img\n          src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n          alt=\"\"\n        />\n        <div>\n          <h1>{movie.title}</h1>\n          <p>User score:{Math.round(movie.vote_average * 10)}%</p>\n          <h2>Overview</h2>\n          <p>{movie.overview}</p>\n          <h2>Genres</h2>\n          <p>{movie.genres && movie.genres.map(el => el.name + ' ')}</p>\n        </div>\n      </div>\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </section>\n  );\n};\nexport default MovieDetails;\n"],"names":["options","method","headers","accept","Authorization","movieId","fetch","useState","movie","setMovie","isLoading","setIsLoading","error","setError","useParams","location","useLocation","backLincLocationRef","useRef","state","from","useEffect","getImages","then","response","json","catch","message","finally","to","current","src","poster_path","alt","title","Math","round","vote_average","overview","genres","map","el","name","Suspense","fallback"],"sourceRoot":""}