{"version":3,"file":"static/js/362.84e1d7c8.chunk.js","mappings":"0NACA,EAAwB,sBAAxB,EAAuD,uBAAvD,EAAuF,uBAAvF,EAAuH,uBAAvH,EAAqJ,qBCD/IA,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NASN,EALgB,SAAAC,GAAO,OACrBC,MAAM,mDAAD,OACgDD,EADhD,8CAEHL,EAHmB,E,kBCmEvB,EArEe,WAAO,IAAD,EACnB,GAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAOMX,EAAO,UAAGU,EAAaE,IAAI,kBAApB,QAAkC,GAEzCC,GAAWC,EAAAA,EAAAA,MAsBjB,OACE,iCACE,qBAASC,UAAWC,EAApB,WACE,kBACED,UAAWC,EACXC,KAAK,OACLC,YAAY,gBACZC,MAAOnB,EACPoB,SArCkB,SAAAC,GACxB,IAAMC,EAAeD,EAAIE,OAAOJ,MAEhCR,EAAgB,CAAEX,QAASsB,GAC5B,KAmCK,mBAAQL,KAAK,SAASF,UAAWC,EAAYQ,QAd9B,WAfnBhB,GAAa,GAEbiB,EAAQzB,GACL0B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GACJzB,EAAUyB,EAAKC,QAChB,IACAC,OAAM,SAAA1B,GACLC,EAASD,EAAM2B,QAChB,IACAC,SAAQ,WACPzB,GAAa,EACd,GAKJ,EAYK,SAAoE,eAKtE,qBAASO,UAAWC,EAApB,UACGX,GAASC,EAASD,EAAM2B,SACxBzB,IAAa,SAAC,KAAD,KACd,eAAIQ,UAAWC,EAAf,SACGb,EAAO+B,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAM1B,GAAxC,SACGsB,EAAMK,SAFFL,EAAME,GAMlB,WAKV,C","sources":["webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","services/Api/Search.js","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Movies_input__KrUqs\",\"button\":\"Movies_button__GcIka\",\"finder\":\"Movies_finder__UGavZ\",\"finded\":\"Movies_finded__ZDQDx\",\"list\":\"Movies_list__hqYjd\"};","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzN2ZjNmQ2ZDk3Y2RjYjQ2MWY4ODRlODNiYjk4YTc5OSIsInN1YiI6IjY0YTcwNjczOTY1MjIwMDBhZTg0MjcwNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ._FssleSwH7ZT_5bsWB87BjRy28BwzRkGD1qx-exsCrk',\n  },\n};\n\nconst getInfo = movieId =>\n  fetch(\n    `https://api.themoviedb.org/3/search/movie?query=${movieId}&include_adult=false&language=en-US&page=1`,\n    options\n  );\nexport default getInfo;\n","import { useSearchParams, useLocation, Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport css from './Movies.module.css';\nimport getInfo from 'services/Api/Search';\nimport { ColorRing } from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const updateQueryString = evt => {\n    const movieIdValue = evt.target.value;\n\n    setSearchParams({ movieId: movieIdValue });\n  };\n  const movieId = searchParams.get('movieId') ?? '';\n\n  const location = useLocation();\n\n  const fetchImages = () => {\n    setIsLoading(true);\n\n    getInfo(movieId)\n      .then(response => response.json())\n      .then(data => {\n        setMovies(data.results);\n      })\n      .catch(error => {\n        setError(error.message);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const handleSearch = () => {\n    fetchImages();\n  };\n\n  return (\n    <>\n      <section className={css.finder}>\n        <input\n          className={css.input}\n          type=\"text\"\n          placeholder=\"Search movies\"\n          value={movieId}\n          onChange={updateQueryString}\n        />\n        <button type=\"submit\" className={css.button} onClick={handleSearch}>\n          Search\n        </button>\n      </section>\n\n      <section className={css.finded}>\n        {error && setError(error.message)}\n        {isLoading && <ColorRing />}\n        <ul className={css.list}>\n          {movies.map(movie => {\n            return (\n              <li key={movie.id}>\n                <Link to={`${movie.id}`} state={{ from: location }}>\n                  {movie.title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </section>\n    </>\n  );\n};\n\nexport default Movies;\nMovies.propTypes = {\n  onChange: PropTypes.func,\n  onClick: PropTypes.func,\n};\n"],"names":["options","method","headers","accept","Authorization","movieId","fetch","useState","movies","setMovies","error","setError","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","get","location","useLocation","className","css","type","placeholder","value","onChange","evt","movieIdValue","target","onClick","getInfo","then","response","json","data","results","catch","message","finally","map","movie","to","id","state","from","title"],"sourceRoot":""}